name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Docker image version (e.g., v0.4.16 or latest)'
        required: true
        default: 'latest'
        type: string
      apps:
        description: 'Apps to deploy (comma-separated: backend,frontend or "all")'
        required: true
        default: 'all'
        type: string
      reason:
        description: 'Reason for manual deployment'
        required: false
        type: string

permissions:
  contents: read
  actions: read

concurrency:
  group: manual-deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # === Docker settings ===
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      # === Kubernetes ===
      K8S_NAMESPACE: mono-repo-demo
      K8S_CA_DATA: ${{ secrets.K8S_CA_DATA }}
      K8S_CLIENT_CERT: ${{ secrets.K8S_CLIENT_CERT }}
      K8S_CLIENT_KEY: ${{ secrets.K8S_CLIENT_KEY }}
      K8S_SERVER: ${{ secrets.K8S_SERVER }}

      # === Deployment settings ===
      VERSION: ${{ inputs.version }}
      REPO_NAME: ${{ github.event.repository.name }}
      DEPLOY_APPS: ${{ inputs.apps }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Display deployment info
        run: |
          echo "========================================="
          echo "ðŸš€ Manual Deployment Information"
          echo "========================================="
          echo "Version: ${VERSION}"
          echo "Apps: ${DEPLOY_APPS}"
          echo "Reason: ${{ inputs.reason || 'Not specified' }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "========================================="

      # Setup kubectl and Helm
      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: 'latest'

      - name: Setup Kubernetes environment
        run: bash .github/scripts/setup-k8s.sh

      # Deploy infrastructure components
      - name: Deploy infrastructure components
        run: bash .github/scripts/deploy-ingress.sh

      # Deploy selected apps using nx
      - name: Deploy apps
        run: |
          # Parse apps input and deploy using nx
          APPS="${DEPLOY_APPS}"

          if [ "$APPS" = "all" ]; then
            echo "Deploying all apps..."
            npx nx run-many -t deploy --all
          else
            echo "Deploying selected apps: $APPS"
            # Convert comma-separated list to nx project names
            IFS=',' read -ra APP_ARRAY <<< "$APPS"
            for app in "${APP_ARRAY[@]}"; do
              app=$(echo "$app" | xargs) # trim whitespace
              echo "Deploying $app..."
              npx nx run $app:deploy
            done
          fi

      # Verify deployments
      - name: Verify deployments
        run: |
          echo "Verifying deployments in namespace ${K8S_NAMESPACE}..."
          kubectl get deployments -n ${K8S_NAMESPACE}
          kubectl get pods -n ${K8S_NAMESPACE}
          kubectl get services -n ${K8S_NAMESPACE}

      - name: Deployment summary
        if: always()
        run: |
          echo "========================================="
          echo "ðŸ“Š Deployment Summary"
          echo "========================================="
          echo "Version: ${VERSION}"
          echo "Apps: ${DEPLOY_APPS}"
          echo "Status: ${{ job.status }}"
          echo "========================================="
